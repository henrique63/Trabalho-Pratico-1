/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Trabalho1;

import javax.swing.JOptionPane;

/**
 *
 * @author henri
 */
public class Principal extends javax.swing.JFrame {
    Contas obj1 = new Contas();
    ContaPoupanca obj2 = new ContaPoupanca();
    ContaEspecial obj3 = new ContaEspecial();
    /**
     * Creates new form Principal
     */
    
    
    
    public Principal(){
        JOptionPane.showMessageDialog(null,"             BEM-VINDO    ","",1);
        obj1.setNome(JOptionPane.showInputDialog(null,"Digite seu nome","CADASTRO CONTA-COMUM", 2));
        obj1.setNumero(Integer.parseInt(JOptionPane.showInputDialog(null,"Número da conta","CADASTRO CONTA-COMUM", 2)));
        obj1.setSaldo(Double.parseDouble(JOptionPane.showInputDialog(null,"Saldo atual","CADASTRO CONTA-COMUM", 2)));
        obj2.setNome(JOptionPane.showInputDialog(null,"Digite seu nome","CADASTRO CONTA-POUPANÇA", 2));
        obj2.setNumero(Integer.parseInt(JOptionPane.showInputDialog(null,"Número da conta","CADASTRO CONTA-POUPANÇA", 2)));
        for(int i = 0; i != 1;){
            if(obj1.getNumero() == obj2.getNumero()){
            JOptionPane.showMessageDialog(null,"NÚMERO JÁ UTILIZADO! Cadastre um número válido.","ALERTA",1);
            obj2.setNumero(Integer.parseInt(JOptionPane.showInputDialog(null,"Número da conta","CADASTRO CONTA-POUPANÇA", 2)));
            }
            else{
                    i = 1;
                    }}
        obj2.setSaldo(Double.parseDouble(JOptionPane.showInputDialog(null,"Saldo atual","CADASTRO CONTA-POUPANÇA", 2)));
        obj3.setNome(JOptionPane.showInputDialog(null,"Digite seu nome","CADASTRO CONTA-ESPECIAL", 2));
        obj3.setNumero(Integer.parseInt(JOptionPane.showInputDialog(null,"Número da conta","CADASTRO CONTA-ESPECIAL", 2)));
        for(int i = 0; i != 1;){
                if(obj3.getNumero() == obj1.getNumero() || obj3.getNumero() == obj2.getNumero()){
                    JOptionPane.showMessageDialog(null,"NÚMERO JÁ UTILIZADO! Cadastre um número válido.","ALERTA",1);
                    obj3.setNumero(Integer.parseInt(JOptionPane.showInputDialog(null,"Número da conta","CADASTRO CONTA-ESPECIAL", 2)));
                 }
                else{
                    i = 1;}}
            obj3.setSaldo(Double.parseDouble(JOptionPane.showInputDialog(null,"Saldo atual","CADASTRO CONTA-ESPECIAL", 2)));
            obj3.setMulta(Double.parseDouble(JOptionPane.showInputDialog(null,"Multa em porcertagem","CADASTRO CONTA-ESPECIAL", 2)));
            obj3.setLimite(Integer.parseInt(JOptionPane.showInputDialog(null,"Limite da conta","CADASTRO CONTA-ESPECIAL", 2)));   
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botaoSacar = new javax.swing.JButton();
        botaoDepositar = new javax.swing.JButton();
        botaoTransferir = new javax.swing.JButton();
        botaoReajustar = new javax.swing.JButton();
        botaoSaldos = new javax.swing.JButton();
        botaoSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("SELECIONE A OPERAÇÃO DESEJADA");

        botaoSacar.setText("Saque");
        botaoSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSacarActionPerformed(evt);
            }
        });

        botaoDepositar.setText("Depósito");
        botaoDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDepositarActionPerformed(evt);
            }
        });

        botaoTransferir.setText("Transferência");
        botaoTransferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoTransferirActionPerformed(evt);
            }
        });

        botaoReajustar.setText("Reajustar");
        botaoReajustar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoReajustarActionPerformed(evt);
            }
        });

        botaoSaldos.setText("Ver saldos ");
        botaoSaldos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSaldosActionPerformed(evt);
            }
        });

        botaoSair.setText("Sair");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoTransferir)
                            .addComponent(botaoSacar)
                            .addComponent(botaoSaldos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botaoReajustar)
                            .addComponent(botaoDepositar)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 34, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoSair)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSacar)
                    .addComponent(botaoDepositar))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoTransferir)
                    .addComponent(botaoReajustar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSaldos)
                    .addComponent(botaoSair))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSacarActionPerformed
       int x = Integer.parseInt(JOptionPane.showInputDialog(null,"Informe o número da conta","SAQUE",2));
        for(int i = 0 ;i != 1;){
          if(obj1.getNumero() == x){
              obj1.sacar(Double.parseDouble(JOptionPane.showInputDialog(null,obj1.getNome()+", informe o valor que deseja sacar","CONTA-COMUM", 2)));
              i = 1;
          }
          else{
              if(obj2.getNumero() == x){
                 obj2.sacar(Double.parseDouble(JOptionPane.showInputDialog(null,"Por favor, "+obj2.getNome()+", informe o valor que deseja sacar","CONTA-POUPANÇA", 2)));
                  i = 1;
              }
              else{
                  if(obj3.getNumero() == x){
                      obj3.descontar(Double.parseDouble(JOptionPane.showInputDialog(null,"Por favor, "+obj3.getNome()+", informe o valor que deseja sacar","CONTA-ESPECIAL", 2)),obj3.getMulta());
                      i = 1;
                    }
                  else{
                      JOptionPane.showMessageDialog(null,"Insira um número de conta válido, por favor","ALERTA",0);
                      x = Integer.parseInt(JOptionPane.showInputDialog(null,"Informe o número da conta","SAQUE",2));
                  }
                  }
                }
       }
    }//GEN-LAST:event_botaoSacarActionPerformed

    private void botaoDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDepositarActionPerformed
        
        for(int i = 0 ;i != 1;){
          int x = Integer.parseInt(JOptionPane.showInputDialog(null,"Informe o número da conta","DEPÓSITO",2));
          if(x == obj1.getNumero()){
          double saldoI = Double.parseDouble(JOptionPane.showInputDialog(null,"Por favor,informe o valor que deseja depositar","CONTA-POUPANÇA", 2));
                  int aux1 = JOptionPane.showConfirmDialog(null,"Tem certeza que deseja realizar essa operação "+obj1.getNome()+" ?");
                  if(aux1==0){
                        obj1.depositar(saldoI);
                        i = 1;
          }}
          else{
              if(obj2.getNumero() == x){
                  double saldoIm = Double.parseDouble(JOptionPane.showInputDialog(null,"Por favor,informe o valor que deseja depositar","CONTA-POUPANÇA", 2));
                  int aux1 = JOptionPane.showConfirmDialog(null,"Tem certeza que deseja realizar essa operação "+obj2.getNome()+" ?");
                  if(aux1==0){
                        obj2.depositar(saldoIm);
                        i = 1;
              }}               
              else{
                  if(obj3.getNumero() == x){
                      double saldoI = Double.parseDouble(JOptionPane.showInputDialog(null,"Por favor,informe o valor que deseja depositar","CONTA-POUPANÇA", 2));
                      int aux1 = JOptionPane.showConfirmDialog(null,"Tem certeza que deseja realizar essa operação "+obj3.getNome()+" ?");
                      if(aux1==0){
                        obj3.depositar(saldoI);
                        i = 1;
                      }}
                      else{
                      JOptionPane.showMessageDialog(null,"Insira um número de conta válido, por favor","ALERTA",0);
                       }}}}
    
    }//GEN-LAST:event_botaoDepositarActionPerformed

    private void botaoTransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoTransferirActionPerformed

        for(int i = 0; i!=1;){
            int x = Integer.parseInt(JOptionPane.showInputDialog(null,"Informe o número da sua conta","TRÂNSFERÊNCIA",2));
            if(obj1.getNumero() == x){
                int y = (Integer.parseInt(JOptionPane.showInputDialog(null,"Por favor, "+obj1.getNome()+", informe o número da conta que deseja transferir o valor","CONTA-COMUM", 2)));
                for(int z = 0 ;z != 1;){
                    if(y == obj2.getNumero()){
                        double saldoBase = Double.parseDouble(JOptionPane.showInputDialog(null,"Informe o valor que deseja transferir","TRANSFÊNCIA",2));
                        if(saldoBase > obj1.getSaldo()){
                            JOptionPane.showMessageDialog(null,"Saldo insuficiente");
                        }
                        else{
                            int aux1 = JOptionPane.showConfirmDialog(null,obj1.getNome()+", tem certeza que deseja transferir "+saldoBase+" R$ para "+obj2.getNome());
                            if(aux1==0){
                                obj1.transferir(saldoBase,obj1.getNumero(),obj2.getNumero());
                                obj2.setSaldo(obj2.getSaldo() + saldoBase);
                                JOptionPane.showMessageDialog(null,"Transferência efetuada com sucesso!");
                                z = 1;
                                i = 1;
                            }
                            else{
                                z = 1;
                                i = 1;
                            }}}
                    else{
                        if(y == obj3.getNumero()){
                            double saldoBase = Double.parseDouble(JOptionPane.showInputDialog(null,"Informe o valor que deseja transferir","TRANSFÊNCIA",2));
                            if(saldoBase > obj1.getSaldo()){
                            JOptionPane.showMessageDialog(null,"Saldo insuficiente");
                            z = 1;
                            i = 1;
                            }
                            else{
                            int aux1 = JOptionPane.showConfirmDialog(null,obj1.getNome()+", tem certeza que deseja transferir "+saldoBase+" R$ para "+obj3.getNome());
                            if(aux1==0){
                            obj1.transferir(saldoBase,obj1.getNumero(),obj3.getNumero());
                            obj3.setSaldo(obj3.getSaldo() + saldoBase);
                            JOptionPane.showMessageDialog(null,"Transferência efetuada com sucesso!");
                            z = 1;
                            i = 1;
                            }}}
                        else{
                            y = (Integer.parseInt(JOptionPane.showInputDialog(null,"Por favor, "+obj1.getNome()+", informe um número de conta já cadastrado","ALERTA", 0)));
                        }}}}
            else{
                if(obj2.getNumero() == x){
                int y = (Integer.parseInt(JOptionPane.showInputDialog(null,"Por favor, "+obj2.getNome()+", informe o número da conta que deseja transferir o valor","CONTA-COMUM", 2)));
                    for(int z = 0 ;z != 1;){
                        if(y == obj1.getNumero()){
                            double saldoBase = Double.parseDouble(JOptionPane.showInputDialog(null,"Informe o valor que deseja transferir","TRANSFÊNCIA",2));
                            if(saldoBase > obj2.getSaldo()){
                                JOptionPane.showMessageDialog(null,"Saldo insuficiente");
                                z = 1;
                                i = 1;
                            }
                            else{
                                int aux1 = JOptionPane.showConfirmDialog(null,obj2.getNome()+", tem certeza que deseja transferir "+saldoBase+" R$ para "+obj1.getNome());
                                if(aux1==0){
                                obj2.transferir(saldoBase,obj2.getNumero(),obj1.getNumero());
                                obj1.setSaldo(obj1.getSaldo() + saldoBase);
                                JOptionPane.showMessageDialog(null,"Transferência efetuada com sucesso!");
                                z = 1;
                                i = 1;
                                }}}
                        else{
                            if(y == obj3.getNumero()){
                                double saldoBase = Double.parseDouble(JOptionPane.showInputDialog(null,"Informe o valor que deseja transferir","TRANSFÊNCIA",2));
                                if(saldoBase > obj2.getSaldo()){
                                JOptionPane.showMessageDialog(null,"Saldo insuficiente");
                                z = 1;
                                i = 1;
                                }
                                else{
                                int aux1 = JOptionPane.showConfirmDialog(null,obj2.getNome()+", tem certeza que deseja transferir "+saldoBase+"R$ para "+obj3.getNome());
                                if(aux1==0){
                                obj2.transferir(saldoBase,obj2.getNumero(),obj3.getNumero());
                                obj3.setSaldo(obj3.getSaldo() + saldoBase);
                                JOptionPane.showMessageDialog(null,"Transferência efetuada com sucesso!");
                                z = 1;
                                i = 1;
                                }}}
                            else{
                                y = (Integer.parseInt(JOptionPane.showInputDialog(null,"Por favor, "+obj2.getNome()+", informe um número de conta já cadastrado","ALERTA", 0)));
                            }}}}
                else{
                    if(obj3.getNumero() == x){
                    int y = (Integer.parseInt(JOptionPane.showInputDialog(null,"Por favor, "+obj3.getNome()+", informe o número da conta que deseja transferir o valor","CONTA-COMUM", 2)));
                        for(int z = 0 ;z != 1;){
                            if(y == obj2.getNumero()){
                            double saldoBase = Double.parseDouble(JOptionPane.showInputDialog(null,"Informe o valor que deseja transferir","TRANSFÊNCIA",2));
                                if(saldoBase > obj3.getSaldo()){
                                    JOptionPane.showMessageDialog(null,"Saldo insuficiente");
                                    z = 1;
                                    i = 1;
                                }
                                else{
                                    int aux1 = JOptionPane.showConfirmDialog(null,obj3.getNome()+", tem certeza que deseja transferir "+saldoBase+" R$ para "+obj2.getNome());
                                    if(aux1==0){
                                    obj3.transferir(saldoBase,obj3.getNumero(),obj2.getNumero());
                                    obj2.setSaldo(obj2.getSaldo() + saldoBase);
                                    JOptionPane.showMessageDialog(null,"Transferência efetuada com sucesso!");
                                    z = 1;
                                    i = 1;
                                    }}}
                            else{
                            if(y == obj1.getNumero()){
                                double saldoBase = Double.parseDouble(JOptionPane.showInputDialog(null,"Informe o valor que deseja transferir","TRANSFÊNCIA",2));
                                if(saldoBase > obj3.getSaldo()){
                                JOptionPane.showMessageDialog(null,"Saldo insuficiente");
                                z = 1;
                                i = 1;
                                }
                                else{
                                int aux1 = JOptionPane.showConfirmDialog(null,obj3.getNome()+", tem certeza que deseja transferir "+saldoBase+" R$ para "+obj1.getNome());
                                if(aux1==0){
                                obj3.transferir(saldoBase,obj3.getNumero(),obj1.getNumero());
                                obj1.setSaldo(obj1.getSaldo() + saldoBase);
                                JOptionPane.showMessageDialog(null,"Transferência efetuada com sucesso!");
                                z = 1;
                                i = 1;
                                }}}
                            else{
                                y = (Integer.parseInt(JOptionPane.showInputDialog(null,"Por favor, "+obj3.getNome()+", informe um número de conta já cadastrado","ALERTA", 0)));
                            }}}}
                    else{
                      JOptionPane.showMessageDialog(null,"Insira um número de conta válido, por favor");
                  }}}}
    }//GEN-LAST:event_botaoTransferirActionPerformed

    private void botaoSaldosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSaldosActionPerformed
        JOptionPane.showMessageDialog(null,"Nº da conta: "+obj1.getNumero()+" | Correntista: "+obj1.getNome()+" | Saldo: "+obj1.getSaldo()+" R$\nNº da conta: "+obj2.getNumero()+" | Correntista: "+obj2.getNome()+" | Saldo: "+obj2.getSaldo()+" R$\nNº da conta: "+obj3.getNumero()+" | Correntista: "+obj3.getNome()+" | Saldo: "+obj3.getSaldo()+" R$","INFORMAÇÕES CADASTRADAS",2);
    }//GEN-LAST:event_botaoSaldosActionPerformed

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
         System.exit(0);
    }//GEN-LAST:event_botaoSairActionPerformed

    private void botaoReajustarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoReajustarActionPerformed
        int x = Integer.parseInt(JOptionPane.showInputDialog(null,"Informe o número da sua conta poupança","REAJUSTAR",1)); //atribuindo o número da conta poupança registrada no início
        for(int z=0;z!=1;){ //laço para garantir um número de conta válido
        if(x==obj2.getNumero()){ //condição para usar os métodos reajuste
            String aux = JOptionPane.showInputDialog(null,"Taxa de reajuste (em porcentagem)","CONTA-POUPANÇA", 2);
            if(aux==null || aux.trim().equals("")){
                obj2.Reajustar();
                z = 1;
            }
            else{
                obj2.reajustar(Double.parseDouble(aux));
                z = 1;
                
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Número de conta poupança não registrado!","ALERTA",0);
             x = Integer.parseInt(JOptionPane.showInputDialog(null,"Informe o número da sua conta poupança","REAJUSTAR",1));
            }}
    }//GEN-LAST:event_botaoReajustarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoDepositar;
    private javax.swing.JButton botaoReajustar;
    private javax.swing.JButton botaoSacar;
    private javax.swing.JButton botaoSair;
    private javax.swing.JButton botaoSaldos;
    private javax.swing.JButton botaoTransferir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
